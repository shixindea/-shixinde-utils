import{_ as s,c as n,o as a,a as e}from"./app-CplXZ6Pn.js";const t={},p=e(`<h3 id="mobilecheck-手机号校验" tabindex="-1"><a class="header-anchor" href="#mobilecheck-手机号校验"><span>mobileCheck 手机号校验</span></a></h3><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;15512666996&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;369&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="isnumber类型判断字符是不是纯数值" tabindex="-1"><a class="header-anchor" href="#isnumber类型判断字符是不是纯数值"><span>isNumber类型判断字符是不是纯数值</span></a></h3><blockquote><p>export declare function isNumber(value: string): boolean;</p></blockquote><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;15512666996&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;369&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="isnullobject-判断字符是不是-空对象" tabindex="-1"><a class="header-anchor" href="#isnullobject-判断字符是不是-空对象"><span>isNullObject 判断字符是不是 空对象</span></a></h3><blockquote><p>export declare function isNullObject(value: Object): boolean;</p></blockquote><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;15512666996&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;369&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="身份证校验" tabindex="-1"><a class="header-anchor" href="#身份证校验"><span>身份证校验</span></a></h3><blockquote><p>export declare const idCardCheck: (value: string) =&gt; boolean;</p></blockquote><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;15512666996&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;369&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="邮箱校验" tabindex="-1"><a class="header-anchor" href="#邮箱校验"><span>邮箱校验</span></a></h3><blockquote><p>export declare const emailCheck: (value: string) =&gt; boolean;</p></blockquote><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;15512666996&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;369&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断是浏览器内核" tabindex="-1"><a class="header-anchor" href="#判断是浏览器内核"><span>判断是浏览器内核</span></a></h3><blockquote><p>export declare const checkBrowser: () =&gt; string;</p></blockquote><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;15512666996&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;369&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断是否是大写字母" tabindex="-1"><a class="header-anchor" href="#判断是否是大写字母"><span>判断是否是大写字母</span></a></h3><blockquote><p>export declare const checkCapitalLetter: (data: string) =&gt; boolean;</p></blockquote><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;15512666996&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;369&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断是否是中文" tabindex="-1"><a class="header-anchor" href="#判断是否是中文"><span>判断是否是中文</span></a></h3><blockquote><p>export declare const checkChinese: (data: string) =&gt; boolean</p></blockquote><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;15512666996&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;369&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断是否是中文-数字或字母" tabindex="-1"><a class="header-anchor" href="#判断是否是中文-数字或字母"><span>判断是否是中文，数字或字母</span></a></h3><blockquote><p>export declare const checkChineseNumberLettter: (data: string) =&gt; boolean;</p></blockquote><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;15512666996&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;369&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断是终端类型-值有ios-android-ipad" tabindex="-1"><a class="header-anchor" href="#判断是终端类型-值有ios-android-ipad"><span>判断是终端类型,值有ios,android,iPad</span></a></h3><blockquote><p>export declare const checkIosAndroidIpad: () =&gt; string;</p></blockquote><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;15512666996&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;369&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断是否是字母" tabindex="-1"><a class="header-anchor" href="#判断是否是字母"><span>判断是否是字母</span></a></h3><blockquote><p>export declare const checkLetter: (data: any) =&gt; boolean;</p></blockquote><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;15512666996&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;369&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="checklowercaseletter-判断是否全部是小写字母" tabindex="-1"><a class="header-anchor" href="#checklowercaseletter-判断是否全部是小写字母"><span>checkLowercaseLetter 判断是否全部是小写字母</span></a></h3><blockquote><p>export declare const checkLowercaseLetter: (data: string) =&gt; boolean;</p></blockquote><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;15512666996&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;369&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断是否是数字" tabindex="-1"><a class="header-anchor" href="#判断是否是数字"><span>判断是否是数字</span></a></h3><blockquote><p>export declare const checkNum: (data: any) =&gt; boolean;</p></blockquote><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;15512666996&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;369&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断是否是字母或数字" tabindex="-1"><a class="header-anchor" href="#判断是否是字母或数字"><span>判断是否是字母或数字</span></a></h3><blockquote><p>export declare const checkNumOrLetter: (data: string) =&gt; boolean;</p></blockquote><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;15512666996&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;369&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断是否是正确的网址" tabindex="-1"><a class="header-anchor" href="#判断是否是正确的网址"><span>判断是否是正确的网址</span></a></h3><blockquote><p>export declare const checkUrl: (url: string) =&gt; boolean;</p></blockquote><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;15512666996&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&quot;369&quot;</span><span class="token punctuation">)</span>  <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,119),o=[p];function c(l,i){return a(),n("div",null,o)}const u=s(t,[["render",c],["__file","check-validate.html.vue"]]),d=JSON.parse('{"path":"/theme-reco/check-validate.html","title":"校验规则","lang":"zh-CN","frontmatter":{"title":"校验规则","date":"2024-7-10"},"headers":[{"level":3,"title":"mobileCheck 手机号校验","slug":"mobilecheck-手机号校验","link":"#mobilecheck-手机号校验","children":[]},{"level":3,"title":"isNumber类型判断字符是不是纯数值","slug":"isnumber类型判断字符是不是纯数值","link":"#isnumber类型判断字符是不是纯数值","children":[]},{"level":3,"title":"isNullObject 判断字符是不是  空对象","slug":"isnullobject-判断字符是不是-空对象","link":"#isnullobject-判断字符是不是-空对象","children":[]},{"level":3,"title":"身份证校验","slug":"身份证校验","link":"#身份证校验","children":[]},{"level":3,"title":"邮箱校验","slug":"邮箱校验","link":"#邮箱校验","children":[]},{"level":3,"title":"判断是浏览器内核","slug":"判断是浏览器内核","link":"#判断是浏览器内核","children":[]},{"level":3,"title":"判断是否是大写字母","slug":"判断是否是大写字母","link":"#判断是否是大写字母","children":[]},{"level":3,"title":"判断是否是中文","slug":"判断是否是中文","link":"#判断是否是中文","children":[]},{"level":3,"title":"判断是否是中文，数字或字母","slug":"判断是否是中文-数字或字母","link":"#判断是否是中文-数字或字母","children":[]},{"level":3,"title":"判断是终端类型,值有ios,android,iPad","slug":"判断是终端类型-值有ios-android-ipad","link":"#判断是终端类型-值有ios-android-ipad","children":[]},{"level":3,"title":"判断是否是字母","slug":"判断是否是字母","link":"#判断是否是字母","children":[]},{"level":3,"title":"checkLowercaseLetter 判断是否全部是小写字母","slug":"checklowercaseletter-判断是否全部是小写字母","link":"#checklowercaseletter-判断是否全部是小写字母","children":[]},{"level":3,"title":"判断是否是数字","slug":"判断是否是数字","link":"#判断是否是数字","children":[]},{"level":3,"title":"判断是否是字母或数字","slug":"判断是否是字母或数字","link":"#判断是否是字母或数字","children":[]},{"level":3,"title":"判断是否是正确的网址","slug":"判断是否是正确的网址","link":"#判断是否是正确的网址","children":[]}],"git":{"updatedTime":null,"contributors":[]},"filePathRelative":"theme-reco/check-validate.md"}');export{u as comp,d as data};
